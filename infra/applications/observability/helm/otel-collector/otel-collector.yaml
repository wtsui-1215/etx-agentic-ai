apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
spec:
  serviceAccount: otel-collector
  mode: deployment
  upgradeStrategy: automatic
  observability:
    metrics:
      enableMetrics: true
  ingress:
    route:
      termination: passthrough
    type: route
  config:
    extensions:
      bearertokenauth:
        filename: "/var/run/secrets/kubernetes.io/serviceaccount/token"

    exporters:
      debug:
        verbosity: basic
      otlphttp/dev:
        endpoint: https://tempo-tempostack-gateway.observability-hub.svc.cluster.local:8080/api/traces/v1/dev
        headers:
          X-Scope-OrgID: dev
        tls:
          insecure: false
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        auth:
          authenticator: bearertokenauth

    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: llama3-2-3b
              scrape_interval: 15s
              static_configs:
                - targets:
                    - 'llama3-2-3b-predictor.llama-serve.svc.cluster.local:8080'
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      batch:
        send_batch_size: 100
        timeout: 1s
      memory_limiter:
        check_interval: 5s
        limit_percentage: 95
        spike_limit_percentage: 25

    service:
      extensions:
        - bearertokenauth
      pipelines:
        metrics:
          receivers:
            - otlp
            - prometheus
          processors:
            - batch
            - memory_limiter
          exporters:
            - debug
        traces:
          receivers:
            - otlp
          processors:
            - batch
            - memory_limiter
          exporters:
            - debug
            - otlphttp/dev
      telemetry:
        metrics:
          level: basic
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: 0.0.0.0
                    port: 8888
