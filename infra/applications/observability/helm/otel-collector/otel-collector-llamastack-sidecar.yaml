# Once this exists, any pod with the template.metadata.annotation below will send metrics
# to observability-hub:
# sidecar.opentelemetry.io/inject: llamastack-otelsidecar
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: llamastack-otelsidecar-example
spec:
  observability:
    metrics: {}
  deploymentUpdateStrategy: {}
  config:
    exporters:
      debug: {}
      otlphttp:
        # all sidecars can export to the central observability-hub otel-collector, then be
        # exported to various backends from there (in-cluster, external 3rd party)
        endpoint: 'http://otel-collector-collector.observability-hub.svc.cluster.local:4318'
        tls:
          insecure: true
    processors: {}
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
    service:
      pipelines:
        traces:
          exporters:
            - debug
            - otlphttp
          receivers:
            - otlp
      telemetry:
        metrics:
          level: basic
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: 0.0.0.0
                    port: 8888
  mode: sidecar
  resources: {}
  podDnsConfig: {}
  managementState: managed
  upgradeStrategy: automatic
  ingress:
    route: {}
  daemonSetUpdateStrategy: {}
  targetAllocator:
    allocationStrategy: consistent-hashing
    filterStrategy: relabel-config
    observability:
      metrics: {}
    prometheusCR:
      scrapeInterval: 30s
    resources: {}
  replicas: 1
  ipFamilyPolicy: SingleStack
